<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from osdi-client/xml/schema/CRM/OSDI/OsdiSyncProfile.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:22bfc92b6c5e6e66a417c21a7ecd2e4e)
 */
use CRM_OSDI_ExtensionUtil as E;

/**
 * Database access object for the SyncProfile entity.
 */
class CRM_OSDI_DAO_SyncProfile extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_osdi_sync_profile';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique OsdiSyncProfile ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * Is this default OSDI SyncProfile?
   *
   * @var bool|string|null
   *   (SQL type: tinyint)
   *   Note that values will be retrieved from the database as a string.
   */
  public $is_default;

  /**
   * User-friendly label for the sync configuration
   *
   * @var string|null
   *   (SQL type: varchar(128))
   *   Note that values will be retrieved from the database as a string.
   */
  public $label;

  /**
   * API entry point (AEP) URL
   *
   * @var string|null
   *   (SQL type: varchar(1023))
   *   Note that values will be retrieved from the database as a string.
   */
  public $entry_point;

  /**
   * API token
   *
   * @var string|null
   *   (SQL type: varchar(1023))
   *   Note that values will be retrieved from the database as a string.
   */
  public $api_token;

  /**
   * class name of Remote System
   *
   * @var string|null
   *   (SQL type: varchar(127))
   *   Note that values will be retrieved from the database as a string.
   */
  public $remote_system;

  /**
   * class name of Matcher
   *
   * @var string|null
   *   (SQL type: varchar(127))
   *   Note that values will be retrieved from the database as a string.
   */
  public $matcher;

  /**
   * class name of Mapper
   *
   * @var string|null
   *   (SQL type: varchar(127))
   *   Note that values will be retrieved from the database as a string.
   */
  public $mapper;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_osdi_sync_profile';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Sync Profiles') : E::ts('Sync Profile');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('Unique OsdiSyncProfile ID'),
          'required' => TRUE,
          'where' => 'civicrm_osdi_sync_profile.id',
          'table_name' => 'civicrm_osdi_sync_profile',
          'entity' => 'SyncProfile',
          'bao' => 'CRM_OSDI_DAO_SyncProfile',
          'localizable' => 0,
          'html' => [
            'type' => 'Number',
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'is_default' => [
          'name' => 'is_default',
          'type' => CRM_Utils_Type::T_BOOLEAN,
          'title' => E::ts('Is Default SyncProfile'),
          'description' => E::ts('Is this default OSDI SyncProfile?'),
          'where' => 'civicrm_osdi_sync_profile.is_default',
          'default' => '0',
          'table_name' => 'civicrm_osdi_sync_profile',
          'entity' => 'SyncProfile',
          'bao' => 'CRM_OSDI_DAO_SyncProfile',
          'localizable' => 0,
          'html' => [
            'type' => 'CheckBox',
          ],
          'add' => NULL,
        ],
        'label' => [
          'name' => 'label',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Label'),
          'description' => E::ts('User-friendly label for the sync configuration'),
          'maxlength' => 128,
          'size' => 128,
          'import' => TRUE,
          'where' => 'civicrm_osdi_sync_profile.label',
          'export' => TRUE,
          'table_name' => 'civicrm_osdi_sync_profile',
          'entity' => 'SyncProfile',
          'bao' => 'CRM_OSDI_DAO_SyncProfile',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'entry_point' => [
          'name' => 'entry_point',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('API Entry Point URL'),
          'description' => E::ts('API entry point (AEP) URL'),
          'maxlength' => 1023,
          'size' => 64,
          'import' => TRUE,
          'where' => 'civicrm_osdi_sync_profile.entry_point',
          'export' => TRUE,
          'table_name' => 'civicrm_osdi_sync_profile',
          'entity' => 'SyncProfile',
          'bao' => 'CRM_OSDI_DAO_SyncProfile',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'api_token' => [
          'name' => 'api_token',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('API Token'),
          'description' => E::ts('API token'),
          'maxlength' => 1023,
          'size' => 64,
          'import' => TRUE,
          'where' => 'civicrm_osdi_sync_profile.api_token',
          'export' => TRUE,
          'table_name' => 'civicrm_osdi_sync_profile',
          'entity' => 'SyncProfile',
          'bao' => 'CRM_OSDI_DAO_SyncProfile',
          'localizable' => 0,
          'html' => [
            'type' => 'Text',
          ],
          'add' => NULL,
        ],
        'remote_system' => [
          'name' => 'remote_system',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Remote System'),
          'description' => E::ts('class name of Remote System'),
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => TRUE,
          'where' => 'civicrm_osdi_sync_profile.remote_system',
          'export' => TRUE,
          'table_name' => 'civicrm_osdi_sync_profile',
          'entity' => 'SyncProfile',
          'bao' => 'CRM_OSDI_DAO_SyncProfile',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_OAuth_BAO_SyncProfile::getRemoteSystems',
          ],
          'add' => NULL,
        ],
        'matcher' => [
          'name' => 'matcher',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Matcher'),
          'description' => E::ts('class name of Matcher'),
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => TRUE,
          'where' => 'civicrm_osdi_sync_profile.matcher',
          'export' => TRUE,
          'table_name' => 'civicrm_osdi_sync_profile',
          'entity' => 'SyncProfile',
          'bao' => 'CRM_OSDI_DAO_SyncProfile',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_OAuth_BAO_OsdiSyncProfile::getMatchers',
          ],
          'add' => NULL,
        ],
        'mapper' => [
          'name' => 'mapper',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Mapper'),
          'description' => E::ts('class name of Mapper'),
          'maxlength' => 127,
          'size' => CRM_Utils_Type::HUGE,
          'import' => TRUE,
          'where' => 'civicrm_osdi_sync_profile.mapper',
          'export' => TRUE,
          'table_name' => 'civicrm_osdi_sync_profile',
          'entity' => 'SyncProfile',
          'bao' => 'CRM_OSDI_DAO_SyncProfile',
          'localizable' => 0,
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'callback' => 'CRM_OAuth_BAO_OsdiSyncProfile::getMappers',
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'osdi_sync_profile', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'osdi_sync_profile', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
